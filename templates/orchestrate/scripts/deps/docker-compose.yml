version: '3.7'

x-container-common: &container-common
  restart: ${CONTAINER_RESTART-on-failure}
  networks:
    - orchestrate

x-postgres-common: &postgres-common
  environment:
    POSTGRES_PASSWORD: postgres

services:
  zookeeper:
    <<: *container-common
    image: confluentinc/cp-zookeeper:5.4.3
    ports:
      - ${ZOOKEEPER_EXTERNAL_PORT-2181}:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: ${ZOOKEEPER_CLIENT_PORT-32181}
      ZOOKEEPER_TICK_TIME: ${ZOOKEEPER_TICK_TIME-2000}

  kafka:
    <<: *container-common
    image: confluentinc/cp-kafka:5.4.3
    depends_on:
      - zookeeper
    ports:
      - ${KAFKA_EXTERNAL_PORT-9092}:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:${ZOOKEEPER_CLIENT_PORT-32181}
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:29092,EXTERNAL://${KAFKA_EXTERNAL_HOSTNAME-localhost}:${KAFKA_EXTERNAL_PORT-9092}
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL

  postgres-api:
    <<: *container-common
    <<: *postgres-common
    image: postgres:10.12-alpine
    volumes:
      - db-data-api:/var/lib/postgresql/data
    ports:
      - 5432

  vault:
    <<: *container-common
    image: library/vault:1.6.2
    tty: true
    cap_add:
    - IPC_LOCK
    volumes:
    - vault-plugin:/vault/plugins
    - ./hashicorp/config/config.hcl:/vault/config.hcl:ro
    entrypoint: vault server -config=/vault/config.hcl
    ports:
    - 8200:8200
    healthcheck:
      test: [ "CMD", "wget", "--spider", "--proxy", "off", "http://vault:8200/v1/sys/health?standbyok=true" ]
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 5s

  vault-init:
    <<: *container-common
    build: ./hashicorp
    environment:
      VAULT_ADDR: ${VAULT_ADDR-http://vault:8200}
      PLUGIN_PATH: ${PLUGIN_PATH-/vault/plugins}
      TOKEN_PATH: ${TOKEN_PATH-/vault/token}
      PLUGIN_VERSION: ${PLUGIN_VERSION-v0.0.10-alpha.5}
    restart: "no"
    depends_on:
      - vault
    volumes:
    - vault-token:/vault/token
    - vault-plugin:/vault/plugins
    - ./hashicorp/init.sh:/init.sh
    - ./hashicorp/plugin.sh:/plugin.sh
    command: >
      sh -c "./plugin.sh && ./init.sh"

  vault-agent:
    <<: *container-common
    image: library/vault:1.6.2
    tty: true
    depends_on:
    - vault
    - vault-init
    cap_add:
    - IPC_LOCK
    volumes:
    - vault-token:/vault/token
    - ./hashicorp/config/agent-config.hcl:/vault/config.hcl:ro
    entrypoint: vault agent -config=/vault/config.hcl
    healthcheck:
      test: [ "CMD", "wget", "--spider", "--proxy", "off", "http://vault:8200/v1/sys/health?standbyok=true" ]
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 5s

volumes:
  db-data-api:
    driver: local
  vault-token:
    driver: local
  vault-plugin:
    driver: local

networks:
  orchestrate:
    driver: bridge
